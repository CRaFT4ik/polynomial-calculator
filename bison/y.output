Conflict in state 10 between rule 8 and token '*' resolved as reduce.
Conflict in state 26 between rule 8 and token '*' resolved as reduce.
Conflict in state 28 between rule 2 and token '+' resolved as reduce.
Conflict in state 28 between rule 2 and token '-' resolved as reduce.
Conflict in state 28 between rule 2 and token '*' resolved as shift.
Conflict in state 29 between rule 3 and token '+' resolved as reduce.
Conflict in state 29 between rule 3 and token '-' resolved as reduce.
Conflict in state 29 between rule 3 and token '*' resolved as shift.
Conflict in state 30 between rule 4 and token '+' resolved as reduce.
Conflict in state 30 between rule 4 and token '-' resolved as reduce.
Conflict in state 30 between rule 4 and token '*' resolved as reduce.
Conflict in state 32 between rule 9 and token '+' resolved as reduce.
Conflict in state 32 between rule 9 and token '-' resolved as reduce.
Conflict in state 32 between rule 9 and token '*' resolved as reduce.
Conflict in state 36 between rule 10 and token '+' resolved as reduce.
Conflict in state 36 between rule 10 and token '-' resolved as reduce.
Conflict in state 36 between rule 10 and token '*' resolved as reduce.
State 6 contains 1 shift/reduce conflict.
State 25 contains 1 shift/reduce conflict.
State 26 contains 1 shift/reduce conflict.

Grammar
rule 1    res -> expr
rule 2    expr -> expr '+' expr
rule 3    expr -> expr '-' expr
rule 4    expr -> expr '*' expr
rule 5    expr -> '(' expr ')'
rule 6    expr -> '-' '(' expr ')'
rule 7    expr -> number
rule 8    expr -> '-' number
rule 9    expr -> number '*' expr
rule 10   expr -> '-' number '*' expr
rule 11   expr -> VARIABLE
rule 12   expr -> '-' VARIABLE
rule 13   expr -> number VARIABLE
rule 14   expr -> number VARIABLE '^' number
rule 15   expr -> VARIABLE '^' number
rule 16   expr -> '(' '-' VARIABLE ')' '^' number
rule 17   expr -> '-' VARIABLE '^' number
rule 18   expr -> number '^' number
rule 19   expr -> '-' number '^' number
rule 20   expr -> '(' '-' number ')' '^' number
rule 21   expr -> '(' expr ')' '^' number
rule 22   expr -> '-' '(' expr ')' '^' number
rule 23   expr -> '(' '-' number ')'
rule 24   expr -> '(' '-' VARIABLE ')'
rule 25   number -> DIGIT
rule 26   number -> number DIGIT

Terminals, with rules where they appear

$ (-1)
'(' (40) 5 6 16 20 21 22 23 24
')' (41) 5 6 16 20 21 22 23 24
'*' (42) 4 9 10
'+' (43) 2
'-' (45) 3 6 8 10 12 16 17 19 20 22 23 24
'^' (94) 14 15 16 17 18 19 20 21 22
error (256)
DIGIT (258) 25 26
VARIABLE (259) 11 12 13 14 15 16 17 24
UMINUS (260)

Nonterminals, with rules where they appear

res (12)
    on left: 1
expr (13)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24, on right: 1 2 3 4 5 6 9 10 21 22
number (14)
    on left: 25 26, on right: 7 8 9 10 13 14 15 16 17 18 19 20 21 22
    23 26


state 0

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 3
    '(' 	shift, and go to state 4

    res 	go to state 49
    expr	go to state 5
    number	go to state 6



state 1

    number  ->  DIGIT .   (rule 25)

    $default	reduce using rule 25 (number)



state 2

    expr  ->  VARIABLE .   (rule 11)
    expr  ->  VARIABLE . '^' number   (rule 15)

    '^' 	shift, and go to state 7

    $default	reduce using rule 11 (expr)



state 3

    expr  ->  '-' . '(' expr ')'   (rule 6)
    expr  ->  '-' . number   (rule 8)
    expr  ->  '-' . number '*' expr   (rule 10)
    expr  ->  '-' . VARIABLE   (rule 12)
    expr  ->  '-' . VARIABLE '^' number   (rule 17)
    expr  ->  '-' . number '^' number   (rule 19)
    expr  ->  '-' . '(' expr ')' '^' number   (rule 22)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 8
    '(' 	shift, and go to state 9

    number	go to state 10



state 4

    expr  ->  '(' . expr ')'   (rule 5)
    expr  ->  '(' . '-' VARIABLE ')' '^' number   (rule 16)
    expr  ->  '(' . '-' number ')' '^' number   (rule 20)
    expr  ->  '(' . expr ')' '^' number   (rule 21)
    expr  ->  '(' . '-' number ')'   (rule 23)
    expr  ->  '(' . '-' VARIABLE ')'   (rule 24)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 11
    '(' 	shift, and go to state 4

    expr	go to state 12
    number	go to state 6



state 5

    res  ->  expr .   (rule 1)
    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)

    '+' 	shift, and go to state 13
    '-' 	shift, and go to state 14
    '*' 	shift, and go to state 15

    $default	reduce using rule 1 (res)



state 6

    expr  ->  number .   (rule 7)
    expr  ->  number . '*' expr   (rule 9)
    expr  ->  number . VARIABLE   (rule 13)
    expr  ->  number . VARIABLE '^' number   (rule 14)
    expr  ->  number . '^' number   (rule 18)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16
    VARIABLE	shift, and go to state 17
    '*' 	shift, and go to state 18
    '^' 	shift, and go to state 19

    '*' 	[reduce using rule 7 (expr)]
    $default	reduce using rule 7 (expr)



state 7

    expr  ->  VARIABLE '^' . number   (rule 15)

    DIGIT	shift, and go to state 1

    number	go to state 20



state 8

    expr  ->  '-' VARIABLE .   (rule 12)
    expr  ->  '-' VARIABLE . '^' number   (rule 17)

    '^' 	shift, and go to state 21

    $default	reduce using rule 12 (expr)



state 9

    expr  ->  '-' '(' . expr ')'   (rule 6)
    expr  ->  '-' '(' . expr ')' '^' number   (rule 22)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 3
    '(' 	shift, and go to state 4

    expr	go to state 22
    number	go to state 6



state 10

    expr  ->  '-' number .   (rule 8)
    expr  ->  '-' number . '*' expr   (rule 10)
    expr  ->  '-' number . '^' number   (rule 19)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16
    '^' 	shift, and go to state 24

    $default	reduce using rule 8 (expr)



state 11

    expr  ->  '-' . '(' expr ')'   (rule 6)
    expr  ->  '-' . number   (rule 8)
    expr  ->  '-' . number '*' expr   (rule 10)
    expr  ->  '-' . VARIABLE   (rule 12)
    expr  ->  '(' '-' . VARIABLE ')' '^' number   (rule 16)
    expr  ->  '-' . VARIABLE '^' number   (rule 17)
    expr  ->  '-' . number '^' number   (rule 19)
    expr  ->  '(' '-' . number ')' '^' number   (rule 20)
    expr  ->  '-' . '(' expr ')' '^' number   (rule 22)
    expr  ->  '(' '-' . number ')'   (rule 23)
    expr  ->  '(' '-' . VARIABLE ')'   (rule 24)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 25
    '(' 	shift, and go to state 9

    number	go to state 26



state 12

    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)
    expr  ->  '(' expr . ')'   (rule 5)
    expr  ->  '(' expr . ')' '^' number   (rule 21)

    '+' 	shift, and go to state 13
    '-' 	shift, and go to state 14
    '*' 	shift, and go to state 15
    ')' 	shift, and go to state 27



state 13

    expr  ->  expr '+' . expr   (rule 2)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 3
    '(' 	shift, and go to state 4

    expr	go to state 28
    number	go to state 6



state 14

    expr  ->  expr '-' . expr   (rule 3)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 3
    '(' 	shift, and go to state 4

    expr	go to state 29
    number	go to state 6



state 15

    expr  ->  expr '*' . expr   (rule 4)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 3
    '(' 	shift, and go to state 4

    expr	go to state 30
    number	go to state 6



state 16

    number  ->  number DIGIT .   (rule 26)

    $default	reduce using rule 26 (number)



state 17

    expr  ->  number VARIABLE .   (rule 13)
    expr  ->  number VARIABLE . '^' number   (rule 14)

    '^' 	shift, and go to state 31

    $default	reduce using rule 13 (expr)



state 18

    expr  ->  number '*' . expr   (rule 9)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 3
    '(' 	shift, and go to state 4

    expr	go to state 32
    number	go to state 6



state 19

    expr  ->  number '^' . number   (rule 18)

    DIGIT	shift, and go to state 1

    number	go to state 33



state 20

    expr  ->  VARIABLE '^' number .   (rule 15)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 15 (expr)



state 21

    expr  ->  '-' VARIABLE '^' . number   (rule 17)

    DIGIT	shift, and go to state 1

    number	go to state 34



state 22

    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)
    expr  ->  '-' '(' expr . ')'   (rule 6)
    expr  ->  '-' '(' expr . ')' '^' number   (rule 22)

    '+' 	shift, and go to state 13
    '-' 	shift, and go to state 14
    '*' 	shift, and go to state 15
    ')' 	shift, and go to state 35



state 23

    expr  ->  '-' number '*' . expr   (rule 10)

    DIGIT	shift, and go to state 1
    VARIABLE	shift, and go to state 2
    '-' 	shift, and go to state 3
    '(' 	shift, and go to state 4

    expr	go to state 36
    number	go to state 6



state 24

    expr  ->  '-' number '^' . number   (rule 19)

    DIGIT	shift, and go to state 1

    number	go to state 37



state 25

    expr  ->  '-' VARIABLE .   (rule 12)
    expr  ->  '(' '-' VARIABLE . ')' '^' number   (rule 16)
    expr  ->  '-' VARIABLE . '^' number   (rule 17)
    expr  ->  '(' '-' VARIABLE . ')'   (rule 24)

    '^' 	shift, and go to state 21
    ')' 	shift, and go to state 38

    ')' 	[reduce using rule 12 (expr)]
    $default	reduce using rule 12 (expr)



state 26

    expr  ->  '-' number .   (rule 8)
    expr  ->  '-' number . '*' expr   (rule 10)
    expr  ->  '-' number . '^' number   (rule 19)
    expr  ->  '(' '-' number . ')' '^' number   (rule 20)
    expr  ->  '(' '-' number . ')'   (rule 23)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16
    '^' 	shift, and go to state 24
    ')' 	shift, and go to state 39

    ')' 	[reduce using rule 8 (expr)]
    $default	reduce using rule 8 (expr)



state 27

    expr  ->  '(' expr ')' .   (rule 5)
    expr  ->  '(' expr ')' . '^' number   (rule 21)

    '^' 	shift, and go to state 40

    $default	reduce using rule 5 (expr)



state 28

    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr '+' expr .   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)

    '*' 	shift, and go to state 15

    $default	reduce using rule 2 (expr)



state 29

    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr '-' expr .   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)

    '*' 	shift, and go to state 15

    $default	reduce using rule 3 (expr)



state 30

    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)
    expr  ->  expr '*' expr .   (rule 4)


    $default	reduce using rule 4 (expr)



state 31

    expr  ->  number VARIABLE '^' . number   (rule 14)

    DIGIT	shift, and go to state 1

    number	go to state 41



state 32

    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)
    expr  ->  number '*' expr .   (rule 9)


    $default	reduce using rule 9 (expr)



state 33

    expr  ->  number '^' number .   (rule 18)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 18 (expr)



state 34

    expr  ->  '-' VARIABLE '^' number .   (rule 17)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 17 (expr)



state 35

    expr  ->  '-' '(' expr ')' .   (rule 6)
    expr  ->  '-' '(' expr ')' . '^' number   (rule 22)

    '^' 	shift, and go to state 42

    $default	reduce using rule 6 (expr)



state 36

    expr  ->  expr . '+' expr   (rule 2)
    expr  ->  expr . '-' expr   (rule 3)
    expr  ->  expr . '*' expr   (rule 4)
    expr  ->  '-' number '*' expr .   (rule 10)


    $default	reduce using rule 10 (expr)



state 37

    expr  ->  '-' number '^' number .   (rule 19)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 19 (expr)



state 38

    expr  ->  '(' '-' VARIABLE ')' . '^' number   (rule 16)
    expr  ->  '(' '-' VARIABLE ')' .   (rule 24)

    '^' 	shift, and go to state 43

    $default	reduce using rule 24 (expr)



state 39

    expr  ->  '(' '-' number ')' . '^' number   (rule 20)
    expr  ->  '(' '-' number ')' .   (rule 23)

    '^' 	shift, and go to state 44

    $default	reduce using rule 23 (expr)



state 40

    expr  ->  '(' expr ')' '^' . number   (rule 21)

    DIGIT	shift, and go to state 1

    number	go to state 45



state 41

    expr  ->  number VARIABLE '^' number .   (rule 14)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 14 (expr)



state 42

    expr  ->  '-' '(' expr ')' '^' . number   (rule 22)

    DIGIT	shift, and go to state 1

    number	go to state 46



state 43

    expr  ->  '(' '-' VARIABLE ')' '^' . number   (rule 16)

    DIGIT	shift, and go to state 1

    number	go to state 47



state 44

    expr  ->  '(' '-' number ')' '^' . number   (rule 20)

    DIGIT	shift, and go to state 1

    number	go to state 48



state 45

    expr  ->  '(' expr ')' '^' number .   (rule 21)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 21 (expr)



state 46

    expr  ->  '-' '(' expr ')' '^' number .   (rule 22)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 22 (expr)



state 47

    expr  ->  '(' '-' VARIABLE ')' '^' number .   (rule 16)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 16 (expr)



state 48

    expr  ->  '(' '-' number ')' '^' number .   (rule 20)
    number  ->  number . DIGIT   (rule 26)

    DIGIT	shift, and go to state 16

    $default	reduce using rule 20 (expr)



state 49

    $   	go to state 50



state 50

    $   	go to state 51



state 51

    $default	accept
